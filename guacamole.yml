---
- name: guacamole
  hosts: "{{ target }}"
  gather_facts: true
  become: true
  tasks:

    - name: Set container_command = docker for rhel7/debian
      set_fact:
        container_command: docker
      when:
        - (ansible_os_family == 'RedHat' and ansible_distribution_major_version == "7") or ansible_os_family == 'Debian'

    - name: Set container_command = podman for rhel8
      set_fact:
        container_command: podman
      when:
        - ansible_os_family == 'RedHat' and ansible_distribution_major_version == "8"

    - name: Docker/Podman Installation
      package:
        name: "{% if ansible_os_family == 'RedHat' %}{{ container_command }}{% elif ansible_os_family == 'Debian' %}docker.io{% endif %}"
        state: present

    - name: Docker Service
      systemd:
        name: docker
        state: started
        enabled: True
      when:
        - (ansible_os_family == 'RedHat' and ansible_distribution_major_version == "7") or ansible_os_family == 'Debian'

    - name: Guacamole data dir
      file:
        path: /opt/guacamole
        state: directory
        owner: root
        group: root
        mode: '0750'

    - name: Determine db passwords set (root)
      stat:
        path: /opt/guacamole/guacdb_root_file
      register: guacdb_root_file

    - name: Determine db passwords set (guacamole)
      stat:
        path: /opt/guacamole/guacdb_guacamole_file
      register: guacdb_guacamole_file

    - name: Create db passwords when not set (root)
      shell: |
        head /dev/urandom | tr -dc A-Za-z0-9 | head -c 20 > /opt/guacamole/guacdb_root_file
      when: guacdb_root_file.stat.exists|bool == False

    - name: Create db passwords when not set (guacamole)
      shell: |
        head /dev/urandom | tr -dc A-Za-z0-9 | head -c 20 > /opt/guacamole/guacdb_guacamole_file
      when: guacdb_guacamole_file.stat.exists|bool == False

    - name: Register db passwords
      shell: |
        cat /opt/guacamole/guacdb_root_file
      register: guacdb_root_pass

    - name: Register db pass (guacamole)
      shell: |
        cat /opt/guacamole/guacdb_guacamole_file
      register: guacdb_guacamole_pass

    - name: Docker Volume (db)
      shell: |
        {{ container_command }} volume create guacdb

    - name: Docker Network - docker 
      shell: |
        {{ container_command }} network create --driver bridge --subnet={{ guacnet_cidr }} guacnet
      ignore_errors: True
      when:
        - container_command == 'docker'

    - name: Container Launch - docker
      shell: |
        {{ container_command }} run -d --name guacd --network guacnet --ip {{ guacnet_guacd }} -d guacamole/guacd
        {{ container_command }} run -d --name guacdb --network guacnet --ip {{ guacnet_guacdb }} --volume guacdb:/var/lib/mysql:Z -e MYSQL_ROOT_PASSWORD={{ guacdb_root_pass.stdout }} -d mysql/mysql-server
        {{ container_command }} run -d --name guacamole --network guacnet --ip {{ guacnet_guacamole }} --link guacd:guacd --link guacdb:mysql -e MYSQL_HOSTNAME={{ guacnet_guacdb }} -e MYSQL_PORT=3306 -e MYSQL_DATABASE=guacamole_db -e MYSQL_USER=guacamole_user -e MYSQL_PASSWORD={{ guacdb_guacamole_pass.stdout }} -e GUACD_HOSTNAME={{ guacnet_guacd }} -e GUACD_PORT=4822 -e GUACD_LOG_LEVEL=debug -d -p 8080:8080 guacamole/guacamole
      when:
        - container_command == 'docker'

    - name: Container Launch - podman
      shell: |
        {{ container_command }} run -d --name guacd --ip {{ guacnet_guacd }} guacamole/guacd
        {{ container_command }} run -d --name guacdb --ip {{ guacnet_guacdb }} --volume guacdb:/var/lib/mysql:Z -e MYSQL_ROOT_PASSWORD={{ guacdb_root_pass.stdout }} mysql/mysql-server
        {{ container_command }} run -d --name guacamole --ip {{ guacnet_guacamole }} -e MYSQL_HOSTNAME={{ guacnet_guacdb }} -e MYSQL_PORT=3306 -e MYSQL_DATABASE=guacamole_db -e MYSQL_USER=guacamole_user -e MYSQL_PASSWORD={{ guacdb_guacamole_pass.stdout }} -e GUACD_HOSTNAME={{ guacnet_guacd }} -e GUACD_PORT=4822 -e GUACD_LOG_LEVEL=debug -p 8080:8080 guacamole/guacamole
      when:
        - container_command == 'podman'

    - name: Determine if (One Time) was done
      stat:
        path: /opt/guacamole/one_time_done
      register: guacdb_one_time_done

    - name: Set my.cnf and dbpass.sql
      template:
        src: "{{ item }}"
        dest: "/opt/guacamole/{{ item }}"
        owner: root
        group: root
        mode: '0400'
      with_items:
        - my.cnf
        - dbpass.sql
      when: guacdb_one_time_done.stat.exists|bool == False

    - name: Wait for mysqld on 3306
      shell: |
        {{ container_command }} logs guacdb 2>&1 | grep --quiet 'port: 3306'
      register: wait_for_mysqld
      until: wait_for_mysqld.rc == 0
      retries: 15
      delay: 15
      when: guacdb_one_time_done.stat.exists|bool == False

    - name: Configure DB (One Time)
      shell: |
        # credentials
        {{ container_command }} cp /opt/guacamole/my.cnf guacdb:/root/.my.cnf
        {{ container_command }} cp /opt/guacamole/dbpass.sql guacdb:dbpass.sql
        {{ container_command }} exec -i guacdb /bin/bash -c "mysql < dbpass.sql"
        touch /opt/guacamole/one_time_done
        # schema
        {{ container_command }} exec -i guacamole /bin/bash -c 'cat /opt/guacamole/mysql/schema/*.sql' > /opt/guacamole/dbschema.sql
        {{ container_command }} cp /opt/guacamole/dbschema.sql guacdb:dbschema.sql
        {{ container_command }} exec -i guacdb /bin/bash -c "mysql guacamole_db < dbschema.sql"
      when: guacdb_one_time_done.stat.exists|bool == False
